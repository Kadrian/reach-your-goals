<h1 class="blub">Learn, bro!</h1>

<div style="margin:0 auto;" height="200">
    <canvas id="draw">
    </canvas>
</div>

<script>
    var c = document.getElementById("draw");
    var ctx = c.getContext("2d");
    c.addEventListener("click", onClick, false);

    // global parameters 
    var n = 20;
    var dist = 40;
    var space = 12;
    var days = 30;

    // set height and width
    var viewportHeight = window.innerHeight;
    var width = window.innerWidth - window.innerWidth * 0.2; 
    var height= window.innerHeight / 2;
    c.setAttribute("width", width);
    c.setAttribute("height", height);
    

    function Player(score, name){
        this.y = 0;
        this.name = name;
        this.score = score;
    }

    // init players array
    players = new Array();

    refresh();

    // initialize
    $.getJSON('/players/load', function(data){
        console.log(data);
        // load
        data.forEach(function(e){
            players.push(new Player(e.score, e.name));
        });
        // distribute players with y values over the height
        players.forEach(function(e, i){
            e.y = (i+1) * height / (players.length + 1);
        });
        refresh();
    });

    function refresh(){
        ctx.fillStyle="black";
        ctx.fillRect(0,0,width,height);

        ctx.fillStyle="white";

        for (var i = 0; i <= days; i++){
            players.forEach(function(e){
                if (i == 21)
                    ctx.fillStyle="red";

                ctx.fillRect(i * (n+space) + dist, e.y, n, n);
                // small numbers
                ctx.fillStyle="white";
                ctx.font = "10px sans-serif";
                ctx.fillText(i.toString(), i * (n+space) + dist + n/3, e.y + n + 10);
            });
        }

        ctx.strokeStyle="#FFF";
        ctx.lineWidth=3;
        var xOffset = (n+space/2) + dist;

        players.forEach(function(e){
            // paint lines
            for (var i = 1; i < 5; i++){
                ctx.beginPath();
                ctx.moveTo(i * 7 * (n+space) + xOffset, e.y-20);
                ctx.lineTo(i * 7 * (n+space) + xOffset, e.y+40);
                ctx.stroke();
            }
            // paint red square
            ctx.fillStyle="red";
            ctx.fillRect((days+1) * (n+space) + dist, e.y, n, n);

            // paint names
            ctx.fillStyle="white";
            ctx.font = "30px sans-serif";
            ctx.fillText(e.name, dist, e.y - n);

            // paint score 
            var off = -10;
            ctx.fillStyle="orange";
            ctx.fillRect(e.score * (n+space) + dist + off, e.y + off, 40, 40);
            ctx.fillStyle="white";
            if (e.score == 21)
                ctx.fillStyle="red";
            ctx.font = "30px sans-serif";
            ctx.fillText(e.score.toString(), e.score * (n+space) + dist -5, e.y + 20);
        });
    }

    function save(){
        $.ajax({
            type: "POST",
            url: '/players/save', //sumbits it to the given url of the form
            data: {players: players},
            dataType: "JSON" 
        }).success(function(data){
            // do something
        });
    }

    // events
    function onClick(e){
        // get color
        var pos = findPos(this);
        var x = e.pageX - pos.x;
        var y = e.pageY - pos.y;

        // detect collision
        console.log("x=" + x + ", y=" + y);
        // all fields
        for (var i = 0; i <= days; i++){
            var xTest = i * (n+space) + dist;
            if (x > xTest && x < xTest + n){
            // all players
                players.forEach(function(e){
                    var yTest = e.y;
                    if (y > yTest && y < yTest+n){
                        e.score = i;
                        // TODO: SAVE NOT ALL BUT ONLY SELECTED
                        save();
                        refresh();
                        return;
                    }
                });
            }
        }
    }

    function findPos(obj) {
        var curleft = 0, curtop = 0;
        if (obj.offsetParent) {
            do {
                curleft += obj.offsetLeft;
                curtop += obj.offsetTop;
            } while (obj = obj.offsetParent);
            return { x: curleft, y: curtop };
        }
        return undefined;
    }
</script>
